version: '3'


networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge


volumes:
    postgres:
        # driver: bridge
        driver: local


services:

### Workspace Utilities Container ###########################
    workspace:
        build:
            context: ./workspace
            args:
                - DOCKER_HOST_IP=${DOCKER_HOST_IP}
                - APP_CODE_PATH_HOST=${APP_CODE_PATH_HOST}
                - APP_CODE_PATH_CONTAINER=${APP_CODE_PATH_CONTAINER}
                - DATA_PATH_HOST=${DATA_PATH_HOST}
                - WORKSPACE_SSH_PORT=${WORKSPACE_SSH_PORT}
                - NGINX_HOST_HTTP_PORT=${NGINX_HOST_HTTP_PORT}
                - NGINX_HOST_HTTPS_PORT=${NGINX_HOST_HTTPS_PORT}
                - NGINX_HOST_LOG_PATH=${NGINX_HOST_LOG_PATH}
                - NGINX_SITES_PATH=${NGINX_SITES_PATH}
                - NGINX_PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
                - NGINX_PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
                - POSTGRES_DB=${POSTGRES_DB}
                - POSTGRES_USER=${POSTGRES_USER}
                - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
                - POSTGRES_PORT=${POSTGRES_PORT}
                - POSTGRES_ENTRYPOINT_INITDB=${POSTGRES_ENTRYPOINT_INITDB}
                - RUBY_VERSION=${RUBY_VERSION}
                - RBENV_ROOT=${RBENV_ROOT}
                - RBENV_VER=${RBENV_VER}
                - RUBY_BUILD_VER=${RUBY_BUILD_VER}
                - RBENV_GEMSET_VER=${RBENV_GEMSET_VER}
                - RBENV_VARS_VER=${RBENV_VARS_VER}
                - CONFIGURE_OPTS=${CONFIGURE_OPTS}
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        extra_hosts:
            - "dockerhost:${DOCKER_HOST_IP}"
        ports:
            - "${WORKSPACE_SSH_PORT}:22"
        tty: true
        # environment:
        #     - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
        networks:
            - frontend
            - backend

### NGINX Server #########################################
    # nginx:
    #     build:
    #         context: ./nginx
    #         args:
    #         - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
    #         - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
    #     volumes:
    #         - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    #         - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
    #         - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
    #     ports:
    #         - "${NGINX_HOST_HTTP_PORT}:80"
    #         - "${NGINX_HOST_HTTPS_PORT}:443"
    #     depends_on:
    #         - workspace
    #     networks:
    #         - frontend
    #         - backend

### PostgreSQL ###########################################
    postgres:
        build: ./postgres
        volumes:
            - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
            - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        # depends_on:
        #     - workspace
        ports:
            - "${POSTGRES_PORT}:5432"
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        networks:
            - backend


### Ruby ################################################
    ryby:
        build: ./ruby
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        networks:
            - backend
            - frontend